import random

#create range of possible integers

def check_player_response(c_choice, p_choice):
    
    #player is presented with computer number, tells the computer either higher or lower
    response = str.lower(input("The computer guessed {}. Too high or too low? Reminder: your guess was {}\n".format(c_choice,p_choice)).strip(' '))
    
    # ensures player is actually giving instructions as specified
    while response != 'too low' and response != 'too high':
        print("Not a valid instruction.")
        response = str.lower(check_player_response(c_choice, p_choice)).strip(' ')
        continue
            
    # ensures player is giving fair instructions
    while response == 'too low' or response == 'too high':
        if (c_choice > p_choice and response == 'too low') or (c_choice < p_choice and response == 'too high'):
            print("That's not true! You have to give fair instructions.")
            response = str.lower(check_player_response(c_choice, p_choice)).strip(' ')
            continue
        else:
            break
    return response

def launch_game(new_game = False):
    
    while True:
        options = range(1,11)
    
        #player selects number
        try:
            player_choice = int(input("Select a whole number from 1 to 10 > "))
        except ValueError:
            print("That's not a valid number. Try again, bruh.")
            continue
        
        if player_choice not in options:
            print("That number isn't in the required range.")
            continue
    
        #initialize max range variables and comp_choice
        max_int = 11
        min_int = 1
        comp_choice = 0
        number_of_rounds = 1
    
        print("Type 'too low' if the computer's guess is too low, or 'too high' if the computer's guess is too high.")
        input("Hit any key to continue.")
    
        while comp_choice != player_choice:
        
            #computer selects number
            options = range(min_int, max_int)
            comp_choice = random.choice(options)
            if comp_choice == player_choice:
                break
        
            #player is presented with computer number, tells the computer either higher or lower
            
            player_guidance = check_player_response(comp_choice, player_choice)
            
            if player_guidance == 'too high':
                max_int = comp_choice
                number_of_rounds += 1
                continue
            elif player_guidance == 'too low':
                min_int = comp_choice + 1
                number_of_rounds += 1
                continue
    
        #game ends when computer guesses player's number
        if number_of_rounds == 1:
            print("The computer guessed {}. Your number was {}, so after {} round, the game is over.".format(comp_choice, player_choice, number_of_rounds))
        else:    
            print("The computer guessed {}. Your number was {}, so after {} rounds, the game is over.".format(comp_choice, player_choice, number_of_rounds))
        print("Game over.")
        play_again = str.lower(input("Do you want to play again? Hit 'y' for yes. Any other key will end the game. > "))
        if play_again == 'y':
            launch_game(True)
        break
    if new_game == False:    
        print("Bye!")
launch_game()
